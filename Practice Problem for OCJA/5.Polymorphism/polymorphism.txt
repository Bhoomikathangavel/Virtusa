COMPILE TIME POLYMORPHISM:

class A {
 

    static int Multiply(int a, int b)
    {
 
      
        return a * b;
    }
 

    static double Multiply(double a, double b)
    {
 
        
        return a * b;
    }
}
 
class Main {
 
  
    public static void main(String[] args)
    {
 
        
        System.out.println(A.Multiply(2, 4));
        System.out.println(A.Multiply(5.5, 6.3));
    }
}

EXAMPLE 2:
class A {
 

    static int Multiply(int a, int b)
    {
 
        return a * b;
    }
 
    
    static int Multiply(int a, int b, int c)
    {
 
        
        return a * b * c;
    }
}
 

class Main {
 
    
    public static void main(String[] args)
    {
 
      
        System.out.println(A.Multiply(2, 4));
        System.out.println(A.Multiply(2, 7, 3));
    }
}

RUN TIME POLYMORPHISM:

class Parent {
 
    void Print()
    {
 
       
        System.out.println("parent class");
    }
}
 

class subclass1 extends Parent {
 

    void Print() { System.out.println("subclass1"); }
}
 

class subclass2 extends Parent {
 

    void Print()
    {
 

        System.out.println("subclass2");
    }
}
 

class Main {
 
   
    public static void main(String[] args)
    {
 
       
        Parent a;
 
      
        a = new subclass1();
        a.Print();
 
        a = new subclass2();
        a.Print();
    }
}